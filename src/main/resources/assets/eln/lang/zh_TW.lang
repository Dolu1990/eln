#<ELN_LANGFILE_V1_1>

# ./src/main/java/mods/eln/Achievements.java
Electrical_Age_[WIP]=電力時代 [開發中]
achievement.craft_50v_macerator=Crushing Novice
achievement.craft_50v_macerator.desc=Craft a 50V Macerator
achievement.open_guide=Wiki Power
achievement.open_guide.desc=開啟維基百科指南

# ./src/main/java/mods/eln/Eln.java
10A_Diode.name=10安培二極體
200V_Active_Thermal_Dissipator.name=200V 風扇散熱器
200V_Battery_Charger.name=200v 電池充電器
200V_Compressor.name=200v 壓縮機
200V_Condensator.name=200v 電容
200V_Copper_Heating_Corp.name=200V 銅加熱棒
200V_Economic_Light_Bulb.name=200v 省電燈泡
200V_Emergency_Lamp.name=200V Emergency Lamp
200V_Farming_Lamp.name=200V 農用燈泡
200V_Fuel_Generator.name=200V 燃油發電機
200V_Incandescent_Light_Bulb.name=200V Incandescent Light Bulb
200V_Iron_Heating_Corp.name=200V 鐵加熱棒
200V_LED_Bulb.name=200V LED燈泡
200V_Macerator.name=200V 磨粉機
200V_Magnetizer.name=200V 磁化機
200V_Plate_Machine.name=200V 壓板機
200V_Power_Socket.name=200v 電源插座
200V_Tungsten_Heating_Corp.name=200V 鎢加熱棒 
200V_Turbine.name=200v 渦輪發電機
25A_Diode.name=25安培二極體
2x3_Rotating_Solar_Panel.name=2x3 Rotating Solar Panel
2x3_Solar_Panel.name=2x3 太陽能板
50V_Battery_Charger.name=50v 電池充電器
50V_Carbon_Incandescent_Light_Bulb.name=50V Carbon Incandescent Light Bulb
50V_Compressor.name=50V 壓縮機
50V_Condensator.name=50V 電容
50V_Copper_Heating_Corp.name=50V 銅加熱棒
50V_Economic_Light_Bulb.name=50V 省電燈泡
50V_Egg_Incubator.name=50V 孵蛋器
50V_Emergency_Lamp.name=50V Emergency Lamp
50V_Farming_Lamp.name=50V 農用燈泡
50V_Fuel_Generator.name=50V 燃油發電機
50V_Incandescent_Light_Bulb.name=50V Incandescent Light Bulb
50V_Iron_Heating_Corp.name=50V 鐵加熱棒
50V_LED_Bulb.name=50V LED燈泡
50V_Macerator.name=50V 磨粉機
50V_Magnetizer.name=50V 磁化機
50V_Plate_Machine.name=50V 壓板機
50V_Power_Socket.name=50V 電源插座
50V_Tungsten_Heating_Corp.name=50V 鎢加熱棒
50V_Turbine.name=50V 渦輪機
800V_Defence_Turret.name=800V 防禦砲塔
AND_Chip.name=AND Chip
Advanced_Chip.name=高級晶片
Advanced_Electrical_Motor.name=高級電動馬達
Advanced_Energy_Meter.name=Advanced Energy Meter
Advanced_Machine_Block.name=高級機器方塊
Advanced_Magnet.name=高級磁鐵
AllMeter.name=帶感溫三用電錶
Alloy_Dust.name=合金粉末
Alloy_Ingot.name=合金錠
Alloy_Plate.name=合金板
Amplifier.name=放大器
Analog_Watch.name=類比式時鐘
Analog_vuMeter.name=Analog Gauge
Analogic_Regulator.name=類比調節器
Animal_Filter.name=動物過濾器
Auto_Miner.name=800V 自動挖礦機
Average_Electrical_Drill.name=普通鑽頭
Average_Ferromagnetic_Core.name=普通磁鐵芯
Basic_Magnet.name=基礎磁鐵
Big_Fuel_Burner.name=大型燃油燃燒室
Black_Brush.name=黑色刷子
Blown_Lead_Fuse.name=Blown Lead Fuse
Blue_Brush.name=藍色刷子
Brown_Brush.name=棕色刷子
Capacity_Oriented_Battery.name=Capacity Oriented Battery
Casing.name=Casing
Cheap_Chip.name=經濟型晶片
Cheap_Electrical_Drill.name=經濟型電鑽
Cheap_Ferromagnetic_Core.name=廉價磁鐵芯
Cinnabar_Dust.name=硃砂粉末
Cinnabar_Ore.name=硃砂礦
Coal_Dust.name=碳粉
Coal_Plate.name=碳板
Combustion_Chamber.name=燃燒室
Configurable_summing_unit.name=Configurable summing unit
Copper_Cable.name=銅製電線
Copper_Dust.name=銅粉末
Copper_Ingot.name=銅錠
Copper_Ore.name=銅礦
Copper_Plate.name=銅板
Copper_Thermal_Cable.name=銅製導熱管線
Cost_Oriented_Battery.name=經濟型電瓶
Current_Oriented_Battery.name=高功率型電瓶
Cyan_Brush.name=Cyan Brush
DC-DC_Converter.name=直流變壓器
D_Flip_Flop_Chip.name=D Flip Flop Chip
Data_Logger.name=數據記錄器
Data_Logger_Print.name=Data Logger Print
Dielectric.name=介電質
Digital_Watch.name=數位式時鐘
Electrical_Anemometer_Sensor.name=電子風速感測器
Electrical_Breaker.name=無熔絲開關
Electrical_Daylight_Sensor.name=電子日光偵測器
Electrical_Entity_Sensor.name=電子生物偵測器
Electrical_Fire_Buzzer.name=Electrical Fire Buzzer
Electrical_Fire_Detector.name=電子火焰偵測器
Electrical_Furnace.name=電熱爐
Electrical_Fuse_Holder.name=保險絲裝載器
Electrical_Light_Sensor.name=亮度感測器
Electrical_Motor.name=電動馬達
Electrical_Probe.name=Electrical Probe
Electrical_Probe_Chip.name=Electrical Probe Chip
Electrical_Source.name=電源
Electrical_Timer.name=電子計時器
Electrical_Weather_Sensor.name=電子天氣感測器
Electrical_age_wrench,\nCan_be_used_to_turn\nsmall_wall_blocks=Electrical age wrench,\nCan be used to turn\nsmall wall blocks
Energy_Meter.name=Energy Meter
Experimental_Transporter.name=實驗性傳送機
Fast_Electrical_Drill.name=高速電鑽
Ferrite_Ingot.name=Ferrite Ingot
Flat_Lamp_Socket.name=平板燈座
Fluorescent_Lamp_Socket.name=日光燈座
Flywheel.name=飛輪
Fuel_Heat_Furnace.name=Fuel Heat Furnace
Gas_Turbine.name=燃氣渦輪機
Generator.name=發電機
Gold_Dust.name=黃金粉末
Gold_Plate.name=黃金板
Gray_Brush.name=灰色刷子
Green_Brush.name=綠色刷子
Ground_Cable.name=接地線
High_Power_Receiver_Antenna.name=800V 電源接收天線
High_Power_Transmitter_Antenna.name=800V 電源發射天線
High_Voltage_Cable.name=800V 電源線
High_Voltage_Relay.name=800V 繼電器
High_Voltage_Switch.name=800V 電源開關
Hub.name=匯流排
Industrial_Data_Logger.name=Industrial Data Logger
Iron_Cable.name=鐵製電線
Iron_Dust.name=鐵粉末
Iron_Plate.name=鐵板
JK_Flip_Flop_Chip.name=JK Flip Flop Chip
Joint.name=Joint
Joint_hub.name=Joint hub
LED_vuMeter.name=LED訊號強度指示燈
Lamp_Socket_A.name=燈座
Lamp_Socket_B_Projector.name=角度燈座
Lamp_Supply.name=燈具控制器
Large_Rheostat.name=Large Rheostat
Lead_Dust.name=鉛粉末
Lead_Fuse_for_high_voltage_cables.name=Lead Fuse for high voltage cables
Lead_Fuse_for_low_voltage_cables.name=Lead Fuse for low voltage cables
Lead_Fuse_for_medium_voltage_cables.name=Lead Fuse for medium voltage cables
Lead_Fuse_for_very_high_voltage_cables.name=Lead Fuse for very high voltage cables
Lead_Ingot.name=鉛錠
Lead_Ore.name=鉛礦
Lead_Plate.name=鉛板
Life_Oriented_Battery.name=高壽命型電瓶
Light_Blue_Brush.name=淺藍色刷子
Lime_Brush.name=萊姆綠刷子
Long_Suspended_Lamp_Socket.name=長型吊燈
Low_Power_Receiver_Antenna.name=50V 電源接收天線
Low_Power_Transmitter_Antenna.name=50V 電源發射天線
Low_Voltage_Cable.name=50V 電源線
Low_Voltage_Relay.name=50V 繼電器
Low_Voltage_Switch.name=50V 電源開關
Lowpass_filter.name=Lowpass filter
Machine_Block.name=機器方塊
Machine_Booster.name=Machine Booster
Magenta_Brush.name=洋紅色刷子
Medium_Fuel_Burner.name=中型燃油燃燒室
Medium_Power_Receiver_Antenna.name=200V 電源接收天線
Medium_Power_Transmitter_Antenna.name=200V 電源發射天線
Medium_Voltage_Cable.name=200V 電源線
Medium_Voltage_Relay.name=200V 繼電器
Medium_Voltage_Switch.name=200V 電源開關
Mercury.name=汞
Mining_Pipe.name=挖礦管
Modbus_RTU.name=Modbus RTU
Modern_Data_Logger.name=Modern Data Logger
Monster_Filter.name=怪物過濾器
MultiMeter.name=三用電錶
NAND_Chip.name=NAND Chip
NOR_Chip.name=NOR Chip
NOT_Chip.name=NOT Chip
Nuclear_Alarm.name=核能音效蜂鳴器
OR_Chip.name=OR Chip
On_OFF_Regulator_10_Percent.name=On/off regulator 10%
On_OFF_Regulator_1_Percent.name=On/off regulator 1%
OpAmp.name=運算放大器
Optimal_Ferromagnetic_Core.name=高級磁鐵芯
Orange_Brush.name=橘色刷牙
Ore_Scanner.name=礦物掃描晶片
Oscillator_Chip.name=Oscillator Chip
Overheating_Protection.name=過熱保護
Overvoltage_Protection.name=過電壓保護
PAL_Chip.name=PAL Chip
PID_Regulator.name=PID Regulator
Pink_Brush.name=粉紅色刷子
Player_Filter.name=玩家過濾器
Portable_Battery.name=隨身型電池
Portable_Battery_Pack.name=隨身型電池包
Portable_Condensator.name=隨身電容
Portable_Condensator_Pack.name=隨身電容包
Portable_Electrical_Axe.name=電動斧頭
Portable_Electrical_Mining_Drill.name=電鑽
Power_Capacitor.name=電容
Power_Inductor.name=電感器
Power_Resistor.name=電阻
Power_capacitor.name=電容
Power_inductor.name=電感
Purple_Brush.name=紫色刷子
Red_Brush.name=紅色刷子
Redstone-to-Voltage_Converter.name=紅石訊號轉電子訊號
Rheostat.name=Rheostat
Robust_Lamp_Socket.name=強化燈座
Rubber.name=橡膠
Sample_and_hold.name=Sample and hold
Scanner.name=Scanner
Schmitt_Trigger_Chip.name=Schmitt Trigger Chip
Sconce_Lamp_Socket.name=掛壁燈座
Signal_20H_inductor.name=Signal 20H inductor
Signal_Antenna.name=電子訊號天線
Signal_Button.name=電子訊號按鈕
Signal_Cable.name=電子訊號線
Signal_Diode.name=電子訊號二極體
Signal_Processor.name=電子訊號處理器
Signal_Relay.name=訊號繼電器
Signal_Source.name=電子訊號產生器
Signal_Switch.name=電子訊號開關
Signal_Switch_with_LED.name=電子訊號帶燈開關
Signal_Trimmer.name=電子訊號調節器
Silicon_Dust.name=矽粉末
Silicon_Ingot.name=矽錠
Silicon_Plate.name=矽板
Silver_Brush.name=銀色刷子
Simple_Lamp_Socket.name=簡約風燈座
Single-use_Battery.name=一次性電池
Small_200V_Copper_Heating_Corp.name=200V 小銅加熱棒
Small_200V_Iron_Heating_Corp.name=200V 小鐵加熱棒
Small_200V_Tungsten_Heating_Corp.name=200V 小鎢加熱棒
Small_50V_Carbon_Incandescent_Light_Bulb.name=Small 50V Carbon Incandescent Light Bulb
Small_50V_Copper_Heating_Corp.name=50V 小銅加熱棒
Small_50V_Economic_Light_Bulb.name=小型 50V 省電燈泡
Small_50V_Incandescent_Light_Bulb.name=Small 50V Incandescent Light Bulb
Small_50V_Iron_Heating_Corp.name=50V 小鐵加熱棒 
Small_50V_Tungsten_Heating_Corp.name=50V 小鎢加熱棒 
Small_Active_Thermal_Dissipator.name=小型風扇散熱器
Small_Flashlight.name=小型手電筒
Small_Fuel_Burner.name=小型燃油燃燒室
Small_Passive_Thermal_Dissipator.name=小型散熱器
Small_Rotating_Solar_Panel.name=Small Rotating Solar Panel
Small_Solar_Panel.name=小型太陽能板
Solar_Tracker.name=陽光追蹤器
Standard_Alarm.name=蜂鳴器
Steam_Turbine.name=蒸氣渦輪機
Stone_Heat_Furnace.name=石製發熱熔爐
Street_Light.name=路燈
Suspended_Lamp_Socket.name=吊燈燈座
Tachometer.name=轉速偵測器
Temperature_Probe.name=Temperature Probe
Thermal_Probe.name=Thermal Probe
Thermal_Probe_Chip.name=Thermal Probe Chip
Thermistor.name=Thermistor
Thermometer.name=Thermometer
Tree_Resin.name=樹脂
Tree_Resin_Collector.name=樹脂收集器
Tungsten_Cable.name=鎢製電線
Tungsten_Dust.name=鎢粉末
Tungsten_Ingot.name=鎢錠
Tungsten_Ore.name=鎢礦
Tutorial_Sign.name=教學告示牌
Very_High_Voltage_Cable.name=3.2KV 電源線
Very_High_Voltage_Relay.name=3.2KV 繼電器
Very_High_Voltage_Switch.name=3.2KV 電源開關
Voltage-to-Redstone_Converter.name=電子訊號轉紅石訊號
Voltage_Oriented_Battery.name=Voltage Oriented Battery
Voltage_Probe.name=Voltage Probe
Voltage_controlled_amplifier.name=電壓控制放大器
Voltage_controlled_sawtooth_oscillator.name=電壓控制鋸齒振盪器
Voltage_controlled_sine_oscillator.name=電壓控制sin波振盪器
Water_Turbine.name=水力發電機
Weak_50V_Battery_Charger.name=低功率50V 電池充電器
White_Brush.name=白色刷子
Wind_Turbine.name=風力發電機
Wireless_Analyser.name=無線訊號分析儀
Wireless_Button.name=無線按鈕
Wireless_Signal_Receiver.name=無線訊號接收器
Wireless_Signal_Repeater.name=無線訊號中繼器
Wireless_Signal_Transmitter.name=無線訊號發射器
Wireless_Switch.name=無線開關
Wrench.name=扳手
X-Ray_Scanner.name=X光掃描器
XNOR_Chip.name=XNOR Chip
XOR_Chip.name=XOR Chip
Yellow_Brush.name=黃色刷子
entity.EAReplicator.name=Replicator
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.Copper Axe.name=Copper Axe
item.E-Coal Boots.name=E-Coal Boots
item.E-Coal Boots.name=E-Coal Boots
item.E-Coal Boots.name=E-Coal Boots
item.E-Coal Boots.name=E-Coal Boots
itemGroup.Eln=Electrical Age
mod.meta.desc=Electricity in your base!
tile.eln.ElnProbe.name=Eln Computer Probe
tile.eln.EnergyConverterElnToOtherHVUBlock.name=800V Electrical Age to other energy exporter
tile.eln.EnergyConverterElnToOtherLVUBlock.name=50V Electrical Age to other energy exporter
tile.eln.EnergyConverterElnToOtherMVUBlock.name=200V Electrical Age to other energy exporter

# ./src/main/java/mods/eln/i18n/I18N.java
You_have_%1$_lives_left=You have %1$ lives left

# ./src/main/java/mods/eln/item/BrushDescriptor.kt
Brush_is_dry=Brush is dry
Can_paint_%1$_blocks=剩餘 %1$ 次

# ./src/main/java/mods/eln/item/CaseItemDescriptor.kt
Can_be_used_to_encase_EA_items_that_support_it=Can be used to encase EA items that support it

# ./src/main/java/mods/eln/item/CombustionChamber.java
Upgrade_for_the_Stone_Heat_Furnace.=為石製發熱熔爐升級

# ./src/main/java/mods/eln/item/ElectricalDrillDescriptor.java
Energy_per_operation\:_%1$J=Energy per operation: %1$J
Time_per_operation\:_%1$h=Time per operation: %1$h

# ./src/main/java/mods/eln/item/FerromagneticCoreDescriptor.java
Cable_loss_factor\:_%1$=Cable loss factor: %1$

# ./src/main/java/mods/eln/item/FuelBurnerDescriptor.kt
Burn_unit_for_the_gas_heat_furnace.=Burn unit for the gas heat furnace.
Produced_heat_power\:_=生成熱功率:

# ./src/main/java/mods/eln/item/HeatingCorpElement.java

# ./src/main/java/mods/eln/item/LampDescriptor.java
Bad=差
Condition\:=Condition:
End_of_life=即將損壞
Good=好
New=新
Nominal_lifetime\:_%1$h=正常壽命: %1$h
Technology\:_%1$=Technology: %1$
Used=已使用

# ./src/main/java/mods/eln/item/LampSlot.java
Lamp_slot=燈泡放置區

# ./src/main/java/mods/eln/item/OverHeatingProtectionDescriptor.java
Useful_to_prevent_overheating\nof_Batteries=有效避免電瓶過熱

# ./src/main/java/mods/eln/item/OverVoltageProtectionDescriptor.java
Useful_to_prevent_over-voltage\nof_Batteries=有效避免電瓶過充

# ./src/main/java/mods/eln/item/SolarTrackerDescriptor.java
Solar_panel_upgrade=太陽能板升級

# ./src/main/java/mods/eln/item/electricalitem/BatteryItem.java

# ./src/main/java/mods/eln/item/electricalitem/ElectricalLampItem.java
State\:=狀態:
Stored_Energy\:_%1$J_(%2$%)=儲存能量: %1$J (%2$%)

# ./src/main/java/mods/eln/item/regulator/RegulatorSlot.java

# ./src/main/java/mods/eln/mechanical/Tachometer.kt
Rads_s_corresponding\nto_0%_output=Rads/s corresponding\nto 0% output
Rads_s_corresponding\nto_100%_output=Rads/s corresponding\nto 100% output

# ./src/main/java/mods/eln/misc/UtilsClient.java
Hold_shift=按住shift鍵

# ./src/main/java/mods/eln/misc/Version.java
mod.name=電力時代

# ./src/main/java/mods/eln/node/six/SixNodeDescriptor.java

# ./src/main/java/mods/eln/simplenode/energyconverter/EnergyConverterElnToOtherGui.java
Input_power_is_limited_to_%1$W=Input power is limited to %1$W

# ./src/main/java/mods/eln/sixnode/AnalogChips.kt
A_voltage-controlled_amplifier_(VCA)\nis_an_electronic_amplifier_that_varies\nits_gain_depending_on_the_control_voltage.=A voltage-controlled amplifier (VCA)\nis an electronic amplifier that varies\nits gain depending on the control voltage.
A_voltage-controlled_oscillator_or_VCO_is\nan_electronic_oscillator_whose_oscillation\nfrequency_is_controlled_by_a_voltage_input.=A voltage-controlled oscillator or VCO is\nan electronic oscillator whose oscillation\nfrequency is controlled by a voltage input.
An_amplifier_increases_the_voltage\nof_an_input_signal_by_a_configurable\ngain_and_outputs_that_voltage.=An amplifier increases the voltage\nof an input signal by a configurable\ngain and outputs that voltage.
Cut-off_frequency_%1$_Hz=Cut-off frequency %1$ Hz
Gain=增益
Gain_for_input_\u00a713=Gain for input \u00a713
Gain_for_input_\u00a722=Gain for input \u00a722
Gain_for_input_\u00a741=Gain for input \u00a741
Lowpass_filter_-_Passes_signals_with_a\nfrequency_lower_than_a_certain_cutoff_frequency\nand_attenuates_signals_with_frequencies_higher\nthan_the_cutoff_frequency.=Lowpass filter - Passes signals with a\nfrequency lower than a certain cutoff frequency\nand attenuates signals with frequencies higher\nthan the cutoff frequency.
Operational_Amplifier_-_DC_coupled\nhigh-gain_voltage_amplifier_with\ndifferential_input._Can_be_used_to\ncompare_voltages_or_as_configurable_amplifier.=Operational Amplifier - DC coupled\nhigh-gain voltage amplifier with\ndifferential input. Can be used to\ncompare voltages or as configurable amplifier.
Params=Params
Proportional–integral–derivative_controller._A_PID\ncontroller_continuously_calculates_an_error_value_as\nthe_difference_between_a_desired_setpoint_and_a_measured\nprocess_variable_and_applies_a_correction_based_on\nproportional,_integral,_and_derivative_terms.=Proportional–integral–derivative controller. A PID\ncontroller continuously calculates an error value as\nthe difference between a desired setpoint and a measured\nprocess variable and applies a correction based on\nproportional, integral, and derivative terms.
Samples_the_voltage_of_a_varying_analog_signal_when\nthe_clock_input_changes_from_0_to_1_and_holds_its\noutput_voltage_at_a_constant_level_until_next_clock_pulse.\nYou_can_see_it_as_an_analog_D-Flipflop.=Samples the voltage of a varying analog signal when\nthe clock input changes from 0 to 1 and holds its\noutput voltage at a constant level until next clock pulse.\nYou can see it as an analog D-Flipflop.
The_summing_unit_outputs_the_sum_of\nthe_three_weighted_inputs.The\ngain_for_each_input_can_be_configured.=The summing unit outputs the sum of\nthe three weighted inputs.The\ngain for each input can be configured.

# ./src/main/java/mods/eln/sixnode/ElectricalFuse.kt
Protects_electrical_components.\nFuse_melts_if_current_exceeds_the\nfuse_limit=保護電子元件.\n若電流超過保險絲的負荷就會融化

# ./src/main/java/mods/eln/sixnode/EmergencyLamp.kt

# ./src/main/java/mods/eln/sixnode/LogicGate.kt
A_Programmable_Array_Logic_(PAL)_is_a_programmable\nlogic_device_semiconductors_used_to__implement_any_logic\nfunction_in_only_one_digital_circuit._The_function_is\nstateless,_which_means_that_no_intermediate_state_is_saved.=A Programmable Array Logic (PAL) is a programmable\nlogic device semiconductors used to  implement any logic\nfunction in only one digital circuit. The function is\nstateless, which means that no intermediate state is saved.
If_the_input_J_is_1_(high)_and_K_is_0_(low)\nduring_a_clock_pulse,_the_output_becomes_1_(high).\nIf_J_is_0_(low)_and_K_is_1_(high)_during_the_pulse,\nthe_output_becomes_0_(low)._If_both_inputs_are_0_(low)\nduring_the_clock_pulse,_the_state_is_maintained._If_both\ninputs_are_1_(high)_the_input_is_toggled_if_a_rising_edge\nwas_detected_at_the_clock_input.=If the input J is 1 (high) and K is 0 (low)\nduring a clock pulse, the output becomes 1 (high).\nIf J is 0 (low) and K is 1 (high) during the pulse,\nthe output becomes 0 (low). If both inputs are 0 (low)\nduring the clock pulse, the state is maintained. If both\ninputs are 1 (high) the input is toggled if a rising edge\nwas detected at the clock input.
If_the_input_voltage_is_lower_than_10V,_the\noutput_is_0_(low),_if_the_output_is_bigger_or\nequal_to_30V,_the_output_will_be_1_(high)._For\nall_voltages_in_between,_the_output_does_not_change.=If the input voltage is lower than 10V, the\noutput is 0 (low), if the output is bigger or\nequal to 30V, the output will be 1 (high). For\nall voltages in between, the output does not change.
Implements_an_exclusive_or.\nAn_output_of_1_(high)_results_if_one_or\nall_three_inputs_to_the_gate_are_1_(high).=Implements an exclusive or.\nAn output of 1 (high) results if one or\nall three inputs to the gate are 1 (high).
Implements_logical_conjunction.\nA_1_(high)_output_results_only_if_all_of\nthe_three_inputs_to_the_AND_gate_are_1_(high).=Implements logical conjunction.\nA 1 (high) output results only if all of\nthe three inputs to the AND gate are 1 (high).
Implements_logical_disjunction.\nA_1_(high)_output_results_if_at_least\none_input_to_the_gate_is_1_(high).=Implements logical disjunction.\nA 1 (high) output results if at least\none input to the gate is 1 (high).
Inverts_the_input_signal.\nOutputs_a_voltage_representing_the\nopposite_logic-level_to_its_input.=Inverts the input signal.\nOutputs a voltage representing the\nopposite logic-level to its input.
Its_output_is_complement_(inverted)\nto_that_of_the_AND_gate.=Its output is complement (inverted)\nto that of the AND gate.
Its_output_is_complement_(inverted)\nto_that_of_the_OR_gate.=Its output is complement (inverted)\nto that of the OR gate.
Its_output_is_complement_(inverted)\nto_that_of_the_XOR_gate.=Its output is complement (inverted)\nto that of the XOR gate.
Outputs_a_rectangular_signal_which's_frequency\ndepends_to_the_input_voltage._The_higher_the\ninput_voltage_-_the_higher_the_frequency.=Outputs a rectangular signal which's frequency\ndepends to the input voltage. The higher the\ninput voltage - the higher the frequency.
The_D_flip-flop_captures_the_value\nof_the_D-input_at_a_rising_edge\nportion_of_the_clock_cycle.=The D flip-flop captures the value\nof the D-input at a rising edge\nportion of the clock cycle.
UNDEF=UNDEF

# ./src/main/java/mods/eln/sixnode/Scanner.kt
-_For_inventories,_outputs_either_total_fill_or_fraction_of_slots_with_any_items.=- For inventories, outputs either total fill or fraction of slots with any items.
-_For_tanks,_outputs_fill_percentage.=- For tanks, outputs fill percentage.
Otherwise_behaves_as_a_vanilla_comparator.=Otherwise behaves as a vanilla comparator.
Right-click_to_change_mode.=點擊滑鼠右鍵以改變模式
Scans_blocks_to_produce_signals.=Scans blocks to produce signals.

# ./src/main/java/mods/eln/sixnode/TreeResinCollector/TreeResinCollectorDescriptor.java
Produces_Tree_Resin_over\ntime_when_put_on_a_tree.=放在樹上時隨時間產生樹脂
This_block_can_only_be_placed_on_the_side_of_a_tree!=This block can only be placed on the side of a tree!

# ./src/main/java/mods/eln/sixnode/batterycharger/BatteryChargerContainer.java
Battery_slot=電池放置區

# ./src/main/java/mods/eln/sixnode/batterycharger/BatteryChargerDescriptor.java
Can_be_used_to_recharge\nelectrical_items_like\:\nFlash_Light,_X-Ray_scanner\nand_Portable_Battery_...=用於對電器充電,例如: 手電筒,X光掃描器和行動電源

# ./src/main/java/mods/eln/sixnode/batterycharger/BatteryChargerElement.java
Charge_Current=充電電流

# ./src/main/java/mods/eln/sixnode/batterycharger/BatteryChargerGui.java

# ./src/main/java/mods/eln/sixnode/diode/DiodeDescriptor.java
Electrical_current_can_only\nflow_through_the_diode\nfrom_anode_to_cathode=電流在二極體內部只能從陽極流到陰極

# ./src/main/java/mods/eln/sixnode/diode/DiodeElement.java
Forward_Voltage=Forward Voltage

# ./src/main/java/mods/eln/sixnode/electricalalarm/ElectricalAlarmDescriptor.java
Emits_an_acoustic_alarm_if\nthe_input_signal_is_high=Emits an acoustic alarm if\nthe input signal is high

# ./src/main/java/mods/eln/sixnode/electricalalarm/ElectricalAlarmElement.java
Engaged=Engaged
Input_Voltage=輸入電壓

# ./src/main/java/mods/eln/sixnode/electricalalarm/ElectricalAlarmGui.java
Sound_is_muted=已經靜音
Sound_is_not_muted=尚未靜音

# ./src/main/java/mods/eln/sixnode/electricalbreaker/ElectricalBreakerContainer.java

# ./src/main/java/mods/eln/sixnode/electricalbreaker/ElectricalBreakerDescriptor.java
Protects_electrical_components\nOpens_contact_if\:\n__-_Voltage_exceeds_a_certain_level\n-_Current_exceeds_the_cable_limit=Protects electrical components\nOpens contact if:\n  - Voltage exceeds a certain level\n- Current exceeds the cable limit

# ./src/main/java/mods/eln/sixnode/electricalbreaker/ElectricalBreakerElement.java
Contact=Contact

# ./src/main/java/mods/eln/sixnode/electricalbreaker/ElectricalBreakerGui.java
Maximum_voltage_before_cutting_off=Maximum voltage before cutting off
Minimum_voltage_before_cutting_off=Minimum voltage before cutting off
Switch_is_off=目前關閉
Switch_is_on=目前開啟

# ./src/main/java/mods/eln/sixnode/electricalcable/ElectricalCableDescriptor.java
A_signal_is_electrical_information\nwhich_must_be_between_0V_and_%1$=A signal is electrical information\nwhich must be between 0V and %1$
Cable_is_adapted_to_conduct\nelectrical_signals.=Cable is adapted to conduct\nelectrical signals.
Current\:_%1$A=電流: %1$A
Not_adapted_to_transport_power.=Not adapted to transport power.
Save_usage\:=Save usage:
Serial_resistance\:_%1$\u2126=Serial resistance: %1$\u2126

# ./src/main/java/mods/eln/sixnode/electricalcable/ElectricalCableElement.java
Signal_Voltage=訊號電壓

# ./src/main/java/mods/eln/sixnode/electricaldatalogger/ElectricalDataLoggerDescriptor.java
It_can_store_up_to_256_points.=It can store up to 256 points.
Measures_the_voltage_of_an\nelectrical_signal_and_plots\nthe_data_in_real_time.=Measures the voltage of an\nelectrical signal and plots\nthe data in real time.

# ./src/main/java/mods/eln/sixnode/electricaldatalogger/ElectricalDataLoggerElement.java

# ./src/main/java/mods/eln/sixnode/electricaldatalogger/ElectricalDataLoggerGui.java
Back_to_display=返回螢幕
Configuration=參數設定
Current_[A]=電流 [A]
Energy_[J]=Energy [J]
Percent_[-]%=Percent [-]%
Power_[W]=功率 [W]
Print=Print
Sampling_period=Sampling period
Temp._[*C]=溫度 [*C]
Voltage_[V]=電壓 [V]
Y-axis_max=Y-axis max
Y-axis_min=Y-axis min

# ./src/main/java/mods/eln/sixnode/electricalentitysensor/ElectricalEntitySensorContainer.java

# ./src/main/java/mods/eln/sixnode/electricalentitysensor/ElectricalEntitySensorDescriptor.java
Output_voltage_increases\nif_entities_are_moving_around.=Output voltage increases\nif entities are moving around.

# ./src/main/java/mods/eln/sixnode/electricalentitysensor/ElectricalEntitySensorElement.java
Entity_present=Entity present

# ./src/main/java/mods/eln/sixnode/electricalfiredetector/ElectricalFireDetectorContainer.kt

# ./src/main/java/mods/eln/sixnode/electricalfiredetector/ElectricalFireDetectorDescriptor.java
Battery_powered_buzzer_\nactivated_in_presence_of_fire.=Battery powered buzzer \nactivated in presence of fire.
Output_voltage_increases\nif_a_fire_has_been_detected.=Output voltage increases\nif a fire has been detected.

# ./src/main/java/mods/eln/sixnode/electricalfiredetector/ElectricalFireDetectorElement.java
Fire_detected\:_=Fire detected:
Fire_present=Fire present

# ./src/main/java/mods/eln/sixnode/electricalgatesource/ElectricalGateSourceDescriptor.java
Provides_configurable_signal\nvoltage.=Provides configurable signal\nvoltage.

# ./src/main/java/mods/eln/sixnode/electricalgatesource/ElectricalGateSourceGui.java
Output_at_%1$%=Output at %1$%

# ./src/main/java/mods/eln/sixnode/electricallightsensor/ElectricalLightSensorDescriptor.java
0V_at_night,_%1$V_at_noon.=夜晚 0V, 白天 %1$V
Provides_an_electrical_voltage\nin_the_presence_of_light.=Provides an electrical voltage\nin the presence of light.
Provides_an_electrical_voltage\nwhich_is_proportional_to\nthe_intensity_of_daylight.=Provides an electrical voltage\nwhich is proportional to\nthe intensity of daylight.

# ./src/main/java/mods/eln/sixnode/electricallightsensor/ElectricalLightSensorElement.java
Light_level=Light level

# ./src/main/java/mods/eln/sixnode/electricalmath/ElectricalMathContainer.java

# ./src/main/java/mods/eln/sixnode/electricalmath/ElectricalMathDescriptor.java
Applicable_boolean_operators\:=Applicable boolean operators:
Applicable_functions\:=Applicable functions:
Applicable_mathematical_operators\:=Applicable mathematical operators:
Calculates_an_output_signal_from\n3_inputs_(A,_B,_C)_using_an_equation.=Calculates an output signal from\n3 inputs (A, B, C) using an equation.

# ./src/main/java/mods/eln/sixnode/electricalmath/ElectricalMathElement.java
Equation=Equation
Input_voltages=Input voltages

# ./src/main/java/mods/eln/sixnode/electricalmath/ElectricalMathGui.java
%1$_Redstone(s)_required=%1$ Redstone(s) required
Equation_required!=Equation required!
Inputs_are=Inputs are
Invalid_equation!=Invalid equation!
Output_voltage_formula=Output voltage formula
Waiting_for_completion...=Waiting for completion...

# ./src/main/java/mods/eln/sixnode/electricalredstoneinput/ElectricalRedstoneInputDescriptor.java
Converts_Redstone_signal\nto_an_electrical_voltage.=Converts Redstone signal\nto an electrical voltage.

# ./src/main/java/mods/eln/sixnode/electricalredstoneinput/ElectricalRedstoneInputElement.java

# ./src/main/java/mods/eln/sixnode/electricalredstoneoutput/ElectricalRedstoneOutputDescriptor.java
Converts_electrical_voltage\ninto_a_Redstone_signal.=Converts electrical voltage\ninto a Redstone signal.

# ./src/main/java/mods/eln/sixnode/electricalredstoneoutput/ElectricalRedstoneOutputElement.java

# ./src/main/java/mods/eln/sixnode/electricalrelay/ElectricalRelayDescriptor.java
A_relay_is_an_electrical\ncontact_that_conducts_electric\ncurrent_or_not,_depending\nthe_actual_input_signal_voltage.=A relay is an electrical\ncontact that conducts electric\ncurrent or not, depending\nthe actual input signal voltage.

# ./src/main/java/mods/eln/sixnode/electricalrelay/ElectricalRelayElement.java
Default_position=Default position

# ./src/main/java/mods/eln/sixnode/electricalrelay/ElectricalRelayGui.java
Normally_closed=常閉 NC
Normally_open=常開 NO

# ./src/main/java/mods/eln/sixnode/electricalsensor/ElectricalSensorDescriptor.java
Can_measure_Voltage_Power_Current=Can measure Voltage/Power/Current
Measures_electrical_values_on_cables.=Measures electrical values on cables.
Measures_voltage_on_cables.=Measures voltage on cables.

# ./src/main/java/mods/eln/sixnode/electricalsensor/ElectricalSensorElement.java
Measured_current=量測電流
Measured_power=量測功率
Measured_voltage=量測電壓

# ./src/main/java/mods/eln/sixnode/electricalsensor/ElectricalSensorGui.java
Measured_voltage\ncorresponding\nto_0%_output=Measured voltage\ncorresponding\nto 0% output
Measured_voltage\ncorresponding\nto_100%_output=Measured voltage\ncorresponding\nto 100% output

# ./src/main/java/mods/eln/sixnode/electricalsource/ElectricalSourceDescriptor.java
Creative_block.=Creative block.
Provides_an_ideal_voltage_source\nwithout_energy_or_power_limitation.=Provides an ideal voltage source\nwithout energy or power limitation.

# ./src/main/java/mods/eln/sixnode/electricalswitch/ElectricalSwitchDescriptor.java
Can_break_an_electrical_circuit\ninterrupting_the_current.=Can break an electrical circuit\ninterrupting the current.

# ./src/main/java/mods/eln/sixnode/electricaltimeout/ElectricalTimeoutDescriptor.java
Upon_application_of_a_high_signal,\nthe_timer_maintains_the_output_high_for\na_configurable_interval._Can_be_re-triggered.=Upon application of a high signal,\nthe timer maintains the output high for\na configurable interval. Can be re-triggered.

# ./src/main/java/mods/eln/sixnode/electricaltimeout/ElectricalTimeoutElement.java
Output=輸出
Remaining=Remaining

# ./src/main/java/mods/eln/sixnode/electricaltimeout/ElectricalTimeoutGui.java
Set=Set
The_time_interval_the\noutput_is_kept_high.=The time interval the\noutput is kept high.

# ./src/main/java/mods/eln/sixnode/electricalvumeter/ElectricalVuMeterDescriptor.java
Displays_the_value_of_a_signal.=顯示電子訊號數據

# ./src/main/java/mods/eln/sixnode/electricalweathersensor/ElectricalWeatherSensorDescriptor.java
Clear\:_%1$V=Clear: %1$V
Provides_an_electrical_signal\ndepending_the_actual_weather.=Provides an electrical signal\ndepending the actual weather.
Rain\:_%1$V=Rain: %1$V
Storm\:_%1$V=Storm: %1$V

# ./src/main/java/mods/eln/sixnode/electricalwindsensor/ElectricalWindSensorDescriptor.java
Maximum_wind_speed_is_%1$m_s=Maximum wind speed is %1$m/s
Provides_an_electrical_signal\ndependant_on_wind_speed.=Provides an electrical signal\ndependant on wind speed.
You_can't_place_this_block_on_the_floor_or_the_ceiling=不能放置於地板或天花板

# ./src/main/java/mods/eln/sixnode/energymeter/EnergyMeterElement.java
Counter=Counter
Energy_left=剩餘能量
Mode=模式
Prepay=Prepay

# ./src/main/java/mods/eln/sixnode/energymeter/EnergyMeterGui.java
Change_password=更改密碼
Counter_Mode=Counter Mode
Counts_the_energy_conducted_from\n\u00a74red\u00a7f_to_\u00a71blue\u00a7f.=Counts the energy conducted from\n\u00a74red\u00a7f to \u00a71blue\u00a7f.
Energy_counter\:_%1$J=Energy counter: %1$J
Enter_new_energy=Enter new energy
Enter_password=輸入密碼
Prepay_Mode=Prepay Mode
Reset_time_counter=重置計時器
Set_energy_counter=Set energy counter
Time_counter\:=Time counter:
Try_password=Try password
You_can_set_an_initial\namount_of_available_energy.\nWhen_the_counter_arrives_at_0\nthe_contact_will_be_opened.=You can set an initial\namount of available energy.\nWhen the counter arrives at 0\nthe contact will be opened.
is_off=is off
is_on=is on
value_in_kJ=value in kJ

# ./src/main/java/mods/eln/sixnode/groundcable/GroundCableDescriptor.java
Can_be_used_to_set_a_point_of_an\nelectrical_network_to_0V_potential.\nFor_example_to_ground_negative_battery_contacts.=Can be used to set a point of an\nelectrical network to 0V potential.\nFor example to ground negative battery contacts.
Provides_a_zero_volt_reference.=Provides a zero volt reference.

# ./src/main/java/mods/eln/sixnode/hub/HubDescriptor.java
Allows_crossing_cables\non_one_single_block.=Allows crossing cables\non one single block.

# ./src/main/java/mods/eln/sixnode/lampsocket/LampSocketDescriptor.java
Angle\:_%1$°_to_%2$°=Angle: %1$° to %2$°
Spot_range\:_%1$_blocks=Spot range: %1$ blocks

# ./src/main/java/mods/eln/sixnode/lampsocket/LampSocketElement.java
Bulb=燈泡

# ./src/main/java/mods/eln/sixnode/lampsocket/LampSocketGuiDraw.java
Cable_slot_empty=Cable slot empty
Orientation\:_%1$°=Orientation: %1$°
Parallel=Parallel
Serial=Serial

# ./src/main/java/mods/eln/sixnode/lampsupply/LampSupplyContainer.java
Electrical_cable_slot\nBase_range_is_32_blocks.\nEach_additional_cable\nincreases_range_by_one.=Electrical cable slot\nBase range is 32 blocks.\nEach additional cable\nincreases range by one.

# ./src/main/java/mods/eln/sixnode/lampsupply/LampSupplyDescriptor.java
Supplies_all_lamps_on_the_channel.=Supplies all lamps on the channel.

# ./src/main/java/mods/eln/sixnode/lampsupply/LampSupplyElement.java
Total_power=總功率

# ./src/main/java/mods/eln/sixnode/lampsupply/LampSupplyGui.java
Power_channel_name=Power channel name
Wireless_channel_name=Wireless channel name

# ./src/main/java/mods/eln/sixnode/modbusrtu/ModbusRtuElement.java
Modbus_TCP=Modbus TCP
Modbus_Unit_ID=Modbus Unit ID
Modbus_is_disabled,_enable_it_in_Eln.cfg=Modbus is disabled, enable it in Eln.cfg

# ./src/main/java/mods/eln/sixnode/modbusrtu/ModbusRtuGui.java
Add=Add
Channel_name=Channel name
Modbus_ID=Modbus ID
Modbus_RTU=Modbus RTU
Station_ID=Station ID
Station_name=Station name
Wireless_RX=Wireless RX
Wireless_TX=Wireless TX

# ./src/main/java/mods/eln/sixnode/powercapacitorsix/PowerCapacitorSixContainer.java
(Increases_maximum_voltage)=(Increases maximum voltage)

# ./src/main/java/mods/eln/sixnode/powercapacitorsix/PowerCapacitorSixElement.java
Capacity=電容

# ./src/main/java/mods/eln/sixnode/powercapacitorsix/PowerCapacitorSixGui.java

# ./src/main/java/mods/eln/sixnode/powerinductorsix/PowerInductorSixContainer.java

# ./src/main/java/mods/eln/sixnode/powerinductorsix/PowerInductorSixElement.java
Inductance=電感

# ./src/main/java/mods/eln/sixnode/powerinductorsix/PowerInductorSixGui.java

# ./src/main/java/mods/eln/sixnode/powersocket/PowerSocketDescriptor.java
Supplies_any_device\nplugged_in_with_energy.=Supplies any device\nplugged in with energy.

# ./src/main/java/mods/eln/sixnode/powersocket/PowerSocketGui.java
Specify_the_device_to_supply_through_this_socket.=Specify the device to supply through this socket.

# ./src/main/java/mods/eln/sixnode/resistor/ResistorContainer.java
(Sets_resistance)=(Sets resistance)
Coal_dust_slot=Coal dust slot

# ./src/main/java/mods/eln/sixnode/resistor/ResistorElement.java

# ./src/main/java/mods/eln/sixnode/thermalcable/ThermalCableDescriptor.java
High_parallel_resistance\n_\=>_Low_power_dissipation.=High parallel resistance\n => Low power dissipation.
Low_serial_resistance\n_\=>_High_conductivity.=Low serial resistance\n => High conductivity.
Parallel_resistance\:_%1$K_W=Parallel resistance: %1$K/W
Serial_resistance\:_%1$K_W=Serial resistance: %1$K/W

# ./src/main/java/mods/eln/sixnode/thermalcable/ThermalCableElement.java
Thermic_power=Thermic power

# ./src/main/java/mods/eln/sixnode/thermalsensor/ThermalSensorContainer.java
Cable_slot=電源線放置區

# ./src/main/java/mods/eln/sixnode/thermalsensor/ThermalSensorDescriptor.java
Can_measure\:=Can measure:
Measures_temperature_of_cables.=測量電線溫度
Measures_thermal_values_on_cables.=Measures thermal values on cables.
__Temperature_Power_conducted=Temperature/Power conducted

# ./src/main/java/mods/eln/sixnode/thermalsensor/ThermalSensorElement.java
Measured_temperature=量測溫度
Measured_thermal_power=量測熱功率

# ./src/main/java/mods/eln/sixnode/thermalsensor/ThermalSensorGui.java
Measured_temperature\ncorresponding\nto_0%_output=Measured temperature\ncorresponding\nto 0% output
Measured_temperature\ncorresponding\nto_100%_output=Measured temperature\ncorresponding\nto 100% output

# ./src/main/java/mods/eln/sixnode/tutorialsign/TutorialSignElement.java
No_text_associated_to_this_beacon=No text associated to this beacon

# ./src/main/java/mods/eln/sixnode/tutorialsign/TutorialSignGui.java
Set_beacon_name=Set beacon name

# ./src/main/java/mods/eln/sixnode/wirelesssignal/rx/WirelessSignalRxGui.java

# ./src/main/java/mods/eln/transparentnode/FuelGenerator.kt
Fuel_level=Fuel level
Nominal_power\:_%1$_W=Nominal power: %1$ W
Nominal_voltage\:_%1$_V=Nominal voltage: %1$ V
Produces_electricity_using_gasoline.=燃燒汽油來產生電力
State=狀態

# ./src/main/java/mods/eln/transparentnode/FuelHeatFurnace.kt
Actual\:_%1$=Actual: %1$
Analog_regulator_slot=Analog regulator slot
Control_value_at_%1$=Control value at %1$
Fuel_burner_slot=Fuel burner slot
Furnace_is_off=熔爐關閉
Furnace_is_on=熔爐啟動
Heat_Power\:_%1$=Heat Power: %1$
Set_point\:_%1$=Set point: %1$
__Max._temperature\:_=  最高溫度:

# ./src/main/java/mods/eln/transparentnode/LargeRheostat.kt
Nom._Resistance\:_%1$=Nom. Resistance: %1$
Power_loss=Power loss

# ./src/main/java/mods/eln/transparentnode/autominer/AutoMinerContainer.java
Drill_slot=鑽頭放置區
Mining_pipe_slot=挖礦管道放置區
Ore_scanner_slot=Ore scanner slot

# ./src/main/java/mods/eln/transparentnode/autominer/AutoMinerDescriptor.java
Excavates_on_a_small_radius.\nExtracts_ore_on_a_bigger_radius\:\n10_blocks_radius_after_10_blocks_depth.=Excavates on a small radius.\nExtracts ore on a bigger radius:\n10 blocks radius after 10 blocks depth.

# ./src/main/java/mods/eln/transparentnode/autominer/AutoMinerElement.java
Depth=深度
Silk_touch=Silk touch

# ./src/main/java/mods/eln/transparentnode/autominer/AutoMinerGuiDraw.java
Chest_missing_on_the\nback_of_the_auto_miner!=自動挖礦機後方沒有箱子
Halves_speed,_triples_power_draw=Halves speed, triples power draw
Silk_Touch=Silk Touch

# ./src/main/java/mods/eln/transparentnode/battery/BatteryContainer.java
Overheating_protection=過熱防護
Overvoltage_protection=Overvoltage protection

# ./src/main/java/mods/eln/transparentnode/battery/BatteryDescriptor.java
Actual_charge\:_=Actual charge:
Energy_capacity\:_=Energy capacity:
Internal_resistance\:_=內阻:
Life_\:_=壽命:
Nominal_power\:_=額定功率:
Nominal_voltage\:_=額定電壓:
_charged_at_=charged at

# ./src/main/java/mods/eln/transparentnode/battery/BatteryGuiDraw.java
Charged=充電中
Discharge=放電
Energy\:=能量
Energy\:_%1$=Energy: %1$
Life\:=壽命
No_charge=未充電
Power_in\:=輸入功率:
Power_out\:=輸出功率:

# ./src/main/java/mods/eln/transparentnode/eggincubator/EggIncubatorContainer.java
Egg_slot=Egg slot

# ./src/main/java/mods/eln/transparentnode/eggincubator/EggIncubatorElement.java
Has_egg=Has egg

# ./src/main/java/mods/eln/transparentnode/electricalantennarx/ElectricalAntennaRxDescriptor.java
Wireless_energy_receiver.=Wireless energy receiver.

# ./src/main/java/mods/eln/transparentnode/electricalantennarx/ElectricalAntennaRxElement.java
Effective_power=Effective power
Power_received=接收功率
Receiving=Receiving

# ./src/main/java/mods/eln/transparentnode/electricalantennatx/ElectricalAntennaTxDescriptor.java
Efficiency\:_%1$%_up_to_%2$%=效率: %1$% 到 %2$% 
Wireless_energy_transmitter.=Wireless energy transmitter.

# ./src/main/java/mods/eln/transparentnode/electricalantennatx/ElectricalAntennaTxElement.java
Efficiency=Efficiency
Transmitting=Transmitting

# ./src/main/java/mods/eln/transparentnode/electricalfurnace/ElectricalFurnaceContainer.java
Heating_corp_slot=Heating corp slot

# ./src/main/java/mods/eln/transparentnode/electricalfurnace/ElectricalFurnaceDescriptor.java
Similar_to_a_vanilla_furnace,\nbut_heats_with_electricity.=Similar to a vanilla furnace,\nbut heats with electricity.

# ./src/main/java/mods/eln/transparentnode/electricalfurnace/ElectricalFurnaceElement.java
Heating_element=Heating element

# ./src/main/java/mods/eln/transparentnode/electricalfurnace/ElectricalFurnaceGuiDraw.java
Auto_shutdown=自動關閉
Manual_shutdown=手動關閉
Set_point\:_%1$°C=Set point: %1$°C

# ./src/main/java/mods/eln/transparentnode/electricalmachine/ElectricalMachineDescriptor.java
Cost=Cost
Nominal_voltage\:_%1V$=Nominal voltage: %1V$

# ./src/main/java/mods/eln/transparentnode/electricalmachine/ElectricalMachineElement.java
Power_provided=提供功率

# ./src/main/java/mods/eln/transparentnode/heatfurnace/HeatFurnaceContainer.java
Combustion_chamber_slot=Combustion chamber slot
Fuel_slot=燃油放置區

# ./src/main/java/mods/eln/transparentnode/heatfurnace/HeatFurnaceElement.java
Set_temperature=溫度設置

# ./src/main/java/mods/eln/transparentnode/heatfurnace/HeatFurnaceGuiDraw.java
Control_gauge_at_%1$%=Control gauge at %1$%
Decline_fuel=Decline fuel
Take_fuel=輸入燃料

# ./src/main/java/mods/eln/transparentnode/powercapacitor/PowerCapacitorContainer.java
(Increases_maximal_voltage)=(增加最大電壓)

# ./src/main/java/mods/eln/transparentnode/solarpanel/SolarPanelContainer.java
Solar_tracker_slot=陽光追蹤器放置區

# ./src/main/java/mods/eln/transparentnode/solarpanel/SolarPanelDescriptor.java
Can_be_geared_towards_the_sun.=可以調整面向太陽
Max._power\:_%1$W=Max. power: %1$W
Max._voltage\:_%1$V=Max. voltage: %1$V
Produces_power_from_solar_radiation.=接收太陽光發電

# ./src/main/java/mods/eln/transparentnode/solarpanel/SolarPanelElement.java
Panel_angle=Panel angle
Producing_energy=Producing energy
Sun_angle=太陽角度

# ./src/main/java/mods/eln/transparentnode/solarpanel/SolarPannelGuiDraw.java
It_is_night=It is night
Solar_panel_angle\:_%1$°=Solar panel angle: %1$°
Sun_angle\:_%1$°=Sun angle: %1$°

# ./src/main/java/mods/eln/transparentnode/teleporter/TeleporterElement.java
Destination=終點
Distance=距離
Required_energy=能量需求

# ./src/main/java/mods/eln/transparentnode/teleporter/TeleporterGui.java
Destination_transporter=Destination transporter
Power_consumption\:=消耗功率:
Power_consumption\:_%1$W=Power consumption: %1$W
Required_energy\:_%1$J=Required energy: %1$J
Start=Start
Transporter_name=傳送機名字

# ./src/main/java/mods/eln/transparentnode/thermaldissipatoractive/ThermalDissipatorActiveDescriptor.java
Fan_cooling_power\:_%1$W=風扇冷卻功率: %1$W
Fan_power_consumption\:_%1$W=風扇功率消耗: %1$W
Fan_voltage\:_%1$V=風扇電壓: %1$V

# ./src/main/java/mods/eln/transparentnode/thermaldissipatoractive/ThermalDissipatorActiveElement.java

# ./src/main/java/mods/eln/transparentnode/transformer/TransformerContainer.java
Casing_slot=Casing slot

# ./src/main/java/mods/eln/transparentnode/transformer/TransformerDescriptor.java
The_voltage_ratio_is_proportional\nto_the_cable_stacks_count_ratio.=The voltage ratio is proportional\nto the cable stacks count ratio.
Transforms_an_input_voltage_to\nan_output_voltage.=Transforms an input voltage to\nan output voltage.

# ./src/main/java/mods/eln/transparentnode/transformer/TransformerElement.java
Core_factor=Core factor
Isolated=Isolated
Ratio=Ratio

# ./src/main/java/mods/eln/transparentnode/turbine/TurbineDescriptor.java
Generates_electricity_using_heat.=利用熱發電
Temperature_difference\:_%1$°C=溫差: %1$°C

# ./src/main/java/mods/eln/transparentnode/turbine/TurbineElement.java
Nominal=額定

# ./src/main/java/mods/eln/transparentnode/turret/TurretDescriptor.java
CAUTION\:_Cables_can_get_quite_hot!=警告:電線可能會變得非常燙
Laser_charge_power\:_%1$W...%2$kW=雷射充能功率: %1$W...%2$kW
Scans_for_entities_and_shoots_if_the\nentity_matches_the_configurable_filter_criteria.=Scans for entities and shoots if the\nentity matches the configurable filter criteria.
Standby_power\:_%1$W=待機功耗: %1$W

# ./src/main/java/mods/eln/transparentnode/turret/TurretElement.java
??=??
Charge_level=Charge level
Shoot_=Shoot
Shoot_everything=Shoot everything
Shoot_nothing=Shoot nothing
Target=目標
animals=動物
monsters=怪物
players=玩家

# ./src/main/java/mods/eln/transparentnode/turret/TurretGui.java
Attack\:=攻擊:
Do_not_attack\:=避免攻擊:
Recharge_power\:=充電功率

# ./src/main/java/mods/eln/transparentnode/waterturbine/WaterTurbineDescriptor.java
Generates_energy_using_water_stream.=利用水流發電
No_place_for_water_turbine!=沒有空間給水輪機放置

# ./src/main/java/mods/eln/transparentnode/waterturbine/WaterTurbineElement.java

# ./src/main/java/mods/eln/transparentnode/windturbine/WindTurbineDescriptor.java
Front\:_%1$=Front: %1$
Generates_energy_from_wind.=利用風發電
Left_Right\:_%1$=Left/Right: %1$
Up_Down\:_%1$=Up/Down: %1$
Wind_area\:=風區:

# ./src/main/java/mods/eln/wiki/Data.java
Light=光
Machine=機器
Ore=礦物
Portable=可攜式
Resource=資源
Signal=訊號
Thermal=Thermal
Upgrade=Upgrade
Utilities=Utilities
Wiring=Wiring

# ./src/main/java/mods/eln/wiki/Default.java
Previous=Previous

# ./src/main/java/mods/eln/wiki/ItemDefault.java
Can_be_used_to_craft\:=可用於合成:
Cannot_be_crafted!=Cannot be crafted!
Cost_%1$J=Cost %1$J
Created_by\:=Created by:
Is_not_a_crafting_material!=Is not a crafting material!
Recipe\:=Recipe:

# Appearing in multiple source files
%1$_is_not_in_range!=%1$ is not in range!
(Increases_capacity)=(Increases capacity)
(Increases_inductance)=(Increases inductance)
Actual\:_%1$°C=Actual: %1$°C
Battery_level=Battery level
Biggest=Biggest
Booster_slot=升級套件放置區
Can_create\:=Can create:
Capacity\:_%1$F=Capacity: %1$F
Channel=Channel
Charge=充電
Charge_power=充電功率
Charge_power\:_%1$W=充電功率: %1$W
Closed=Closed
Connected=已經連接
Cooling_power\:_%1$W=冷卻功率: %1$W
Copper_cable_slot=Copper cable slot
Current=Current
Dielectric_slot=Dielectric slot
Discharge_power\:_%1$W=放電功率: %1$W
Electrical_cable_slot=電源線放置區
Energy=Energy
Entity_filter_slot=Entity filter slot
External_control=外部控制
Ferromagnetic_core_slot=Ferromagnetic core slot
Generated_power=發電功率
Generates_heat_when_supplied_with_fuel.=供給燃料發熱
Generating=發電中
Has_a_signal_output.=Has a signal output.
Inductance\:_%1$H=Inductance: %1$H
Input=輸入
Input_voltage=輸入電壓
Internal_control=內部控制
Internal_resistance\:_%1$\u2126=Internal resistance: %1$\u2126
Is_off=Is off
Is_on=Is on
Life=Life
Max._temperature\:_%1$°C=最高溫度: %1$°C
Measured_value\ncorresponding\nto_0%_output=Measured value\ncorresponding\nto 0% output
Measured_value\ncorresponding\nto_100%_output=Measured value\ncorresponding\nto 100% output
No=No
Nominal\:=Nominal:
Nominal_power\:_%1$W=額定功率: %1$W
Nominal_usage\:=Nominal usage:
Nominal_voltage\:_%1$V=額定電壓: %1$V
None=None
Not_connected=尚未連接
Not_enough_space_for_this_block=空間不足,無法放置方塊
OFF=關
ON=開
Off=關閉
On=開啟
Open=Open
Output_voltage=Output voltage
Portable_battery_slot=隨身型電池放置區
Position=位置
Power=Power
Power\:_%1$W=功率: %1$W
Power_consumption=功率消耗
Powered_by_Lamp_Supply=使用燈具控制器供電
Powered_by_cable=使用電源線供電
Produced_power=Produced power
Range\:_%1$_blocks=範圍: %1$ 格
Redstone_slot=紅石放置區
Redstone_value=Redstone value
Regulator_slot=Regulator slot
Reset=重置
Resistance=電阻
Resistance\:_%1$\u2126=Resistance: %1$\u2126
Smallest=Smallest
Specify_the_channel=Specify the channel
Specify_the_supply_channel=Specify the supply channel
Stored_energy\:_%1$J_(%2$%)=儲存能量: %1$J (%2$%)
Temperature=Temperature
Temperature\:_%1$°C=溫度: %1$°C
Temperature_gauge=Temperature gauge
Thermal_isolator_slot=Thermal isolator slot
Thermal_power=熱功率
Toggle=Toggle
Toggle_switch=Toggle switch
Toggles_the_output_each_time\nan_emitter's_value_rises.\nUseful_to_allow_multiple_buttons\nto_control_the_same_light.=Toggles the output each time\nan emitter's value rises.\nUseful to allow multiple buttons\nto control the same light.
Used_to_cool_down_turbines.=用於冷卻渦輪機
Uses_the_biggest\nvalue_on_the_channel.=Uses the biggest\nvalue on the channel.
Uses_the_smallest\nvalue_on_the_channel.=Uses the smallest\nvalue on the channel.
Validate=Validate
Voltage=Voltage
Voltage\:_%1$V=電壓: %1$V
Voltage_drop=電壓降
Voltages=Voltages
Yes=Yes
You_can't_place_this_block_at_this_side=你不能放置這個方塊在這個位置
_O\:_= O:
